# Importing all necessary packages


import pandas as pd
import numpy as np
import re
from requests_html import HTMLSession
import random


# Creating Function to pull posts and fields from inputted Job Page URL

def getFields(web):
  indx_h = [m.start() for m in re.finditer('\nR\nRecruiter\n', web)]
  indx_h1 = [m.start() for m in re.finditer('\nN\nName HiddenRecruiter\n', web)]
  indx_h2 = [m.start() for m in re.finditer('\nN\nName Hidden', web)]
  indx = np.sort(indx_h + indx_h1 + indx_h2)
  
  indx_s = [None] * (len(indx) -1)
  numPosts = range(0, len(indx) - 1)
  fields = [None] * (len(indx) - 1)
  
  for i in numPosts:
    indx_s[i] = [m.start() for m in re.finditer('\n', web[indx[i]:indx[i + 1]])]
    indx_s[i] = [x + indx[i] for x in indx_s[i]]
    fields[i] = len(indx_s[i]) - 1
  
  indx_s[(len(indx) - 2)] = np.append(indx_s[(len(indx) - 2)], indx[len(indx) - 1])
  numFields = range(1, max(fields))
  
  field_string = [[''] * max(fields)] * (len(indx) - 1)
  df_temp = pd.DataFrame(field_string)
  
  for i in numPosts:
  
    numFields = range(0, fields[i])
    
    for j in numFields:
      
      df_temp.iloc[i,j] = web[indx_s[i][j]:indx_s[i][j + 1]]
      
  
  return df_temp;

# Creating Function to clean target DataFrame

def cleanDF(ph):
  
  myVec_m = [[''] * 12] * 50000
  df_m = pd.DataFrame(myVec_m)
  df_m.columns = ['Recruiter_Type', 'Position_Title', 'Hiring_Company', 'Last_Updated', 'Location', 'YoE', 'Clearance_Required', 'col7', 'col8', 'col9', 'col10', 'col11']
  
  ph = ph.replace('\n','', regex=True)
  ph = ph.replace('Apply today! Be one of the first candidates to apply for maximum exposure.','', regex=True)
  ph = ph.replace('Save JobApply','', regex=True)
  ph['col1'] = ph['col1'].replace('Name Hidden','', regex=True)
  
  del ph['col0']
  counter_m = 0
  
  df_cols = range(0,11)
  df_rows = range(0,50000)
  
  for j in df_rows:
    for i in df_cols:
      if ph.iloc[j, i] != "" and ph.iloc[j, i] != "New" and len(ph.iloc[j,i]) > 1:
        df_m.iloc[j, counter_m] = ph.iloc[j, i]
        counter_m = counter_m + 1
    counter_m = 0
  
  for j in df_rows:
    if df_m.iloc[j,6] == "":
      temp_clearance = df_m.iloc[j,5]
      temp_yoe = df_m.iloc[j,6]
      df_m.iloc[j,6] = temp_clearance
      df_m.iloc[j,5] = temp_yoe
      
  
  
  return df_m;


# Declaring empty DataFrame

myVec = [[''] * 12] * 50000
df = pd.DataFrame(myVec)
counter = 0
df.columns = ['col0', 'col1', 'col2', 'col3', 'col4', 'col5', 'col6', 'col7', 'col8', 'col9', 'col10', 'col11']

# Passing through URLs and storing in dataframe - ensure to update pageNumber range for desired scope



session = HTMLSession()
pageNumber = range(1, 100)

for i in pageNumber:
  
  if i == 1:
    
    session = HTMLSession()
    r = session.get('https://www.clearancejobs.com/jobs')
    
    r.html.render(timeout=10)
    vectorFields = getFields(r.html.text)
    numPosts_c = range(0, vectorFields.shape[0])
    
    for j in numPosts_c:
        
      df_cols = range(0, vectorFields.shape[1])
      counter = counter + 1
                
      for k in df_cols:
        df.iloc[counter, k] = vectorFields.iloc[j, k]
    
  else:
      
    try:
      session = HTMLSession()
      r = session.get('https://www.clearancejobs.com/jobs?PAGE=' + str(i))
      r.html.render(timeout=10)
      vectorFields = getFields(r.html.text)
      numPosts_c = range(0, vectorFields.shape[0])
      
      for j in numPosts_c:
        
        df_cols = range(0, vectorFields.shape[1])
        counter = counter + 1
                
        for k in df_cols:
          df.iloc[counter, k] = vectorFields.iloc[j, k]
          
    except (RuntimeError, IndexError, TimeoutError):
      try:
        session = HTMLSession()
        r = session.get('https://www.clearancejobs.com/jobs?PAGE=' + str(i))
        r.html.render(timeout=20)
        vectorFields = getFields(r.html.text)
        numPosts_c = range(0, vectorFields.shape[0])
        
        for j in numPosts_c:
        
          df_cols = range(0, vectorFields.shape[1])
          counter = counter + 1
                
          for k in df_cols:
            df.iloc[counter, k] = vectorFields.iloc[j, k]
            
      except (RuntimeError, IndexError, TimeoutError):
          try:
            session = HTMLSession()
            r = session.get('https://www.clearancejobs.com/jobs?PAGE=' + str(i))
            r.html.render(timeout=60)
            vectorFields = getFields(r.html.text)
            numPosts_c = range(0, vectorFields.shape[0])
            
            for j in numPosts_c:
              
              df_cols = range(0, vectorFields.shape[1])
              counter = counter + 1
              
              for k in df_cols:
                df.iloc[counter, k] = vectorFields.iloc[j, k]
                
          except (RuntimeError, IndexError, TimeoutError):
            print('Page Load Failed')
    

# Cleaning and storing new dataframe in excel

df_m = cleanDF(df)
df_m.to_csv(r"C:\Users\kylet\OneDrive\Documents\Side Proj\dataset.csv",index=False,header=True)
